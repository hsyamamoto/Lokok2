<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - LOKOK System</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Geist:wght@300;400;500;600;700&family=Geist+Mono:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        'sans': ['Geist', 'system-ui', 'sans-serif'],
                        'mono': ['Geist Mono', 'monospace']
                    },
                    fontSize: {
                        'base': '16px'
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50 font-sans text-base">
    <%
      // Safe defaults to prevent ReferenceError when query params not provided
      const _monthlySort = typeof monthlySort !== 'undefined' && monthlySort ? monthlySort : 'period_desc';
      const _monthlyStart = typeof monthlyStart !== 'undefined' ? monthlyStart : '';
      const _monthlyEnd = typeof monthlyEnd !== 'undefined' ? monthlyEnd : '';
      const _recentStart = typeof recentStart !== 'undefined' ? recentStart : '';
      const _recentEnd = typeof recentEnd !== 'undefined' ? recentEnd : '';
      // Safeguard for monthly entries array to avoid ReferenceError when not provided
      const _sortedMonthlyEntries = (typeof sortedMonthlyEntries !== 'undefined' && Array.isArray(sortedMonthlyEntries))
        ? sortedMonthlyEntries
        : ((typeof stats !== 'undefined' && stats && stats.monthlyStats) ? Object.entries(stats.monthlyStats) : []);
    %>
    <!-- Navigation -->
    <nav class="bg-gradient-to-r from-sky-200 to-blue-200 shadow-lg">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center">
                    <h1 class="text-xl font-bold text-blue-800">
                        <i class="fas fa-chart-line mr-2"></i>
                        Suppliers System
                    </h1>
                </div>
                <div class="flex items-center space-x-4">
                    <span class="text-sm text-blue-700">
                        Welcome, <span class="font-medium"><%= user.name %></span>
                    </span>
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-700">
                        <%= user.role %>
                    </span>
                    <% if (user && user.role === 'admin') { %>
                    <a href="/users" class="text-sm text-blue-700 hover:text-blue-900 transition-colors duration-200">
                        <i class="fas fa-users mr-1"></i>
                        Users
                    </a>
                    <% } %>
                    <a href="/logout" class="text-sm text-blue-700 hover:text-blue-900 transition-colors duration-200">
                        <i class="fas fa-sign-out-alt mr-1"></i>
                        Logout
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Header -->
        <div class="mb-8">
            <h2 class="text-3xl font-bold text-gray-900 mb-2">Dashboard</h2>
            <p class="text-base text-gray-600">Overview of suppliers and system statistics</p>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <div class="bg-gradient-to-br from-sky-200 to-sky-300 rounded-xl p-6 text-sky-800 shadow-lg">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-sky-700 mb-1">Total Suppliers</p>
                        <p class="text-3xl font-bold"><%= stats.totalRecords %></p>
                    </div>
                    <div class="bg-sky-100 bg-opacity-70 rounded-lg p-3">
                        <i class="fas fa-building text-xl"></i>
                    </div>
                </div>
            </div>

            <div class="bg-gradient-to-br from-emerald-200 to-emerald-300 rounded-xl p-6 text-emerald-800 shadow-lg">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-emerald-700 mb-1">Active Categories</p>
                        <p class="text-3xl font-bold"><%= Object.keys(stats.categoryStats).length %></p>
                    </div>
                    <div class="bg-emerald-100 bg-opacity-70 rounded-lg p-3">
                        <i class="fas fa-tags text-xl"></i>
                    </div>
                </div>
            </div>

            <div class="bg-gradient-to-br from-violet-200 to-violet-300 rounded-xl p-6 text-violet-800 shadow-lg">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-violet-700 mb-1">Active Managers</p>
                        <p class="text-3xl font-bold"><%= Object.keys(stats.responsibleStats).length %></p>
                    </div>
                    <div class="bg-violet-100 bg-opacity-70 rounded-lg p-3">
                        <i class="fas fa-users text-xl"></i>
                    </div>
                </div>
            </div>

            <div class="bg-gradient-to-br from-amber-200 to-amber-300 rounded-xl p-6 text-amber-800 shadow-lg">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-amber-700 mb-1">Months with Records</p>
                        <p class="text-3xl font-bold"><%= Object.keys(stats.monthlyStats).length %></p>
                    </div>
                    <div class="bg-amber-100 bg-opacity-70 rounded-lg p-3">
                        <i class="fas fa-calendar text-xl"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="bg-white rounded-xl shadow-lg p-6 mb-8">
            <h3 class="text-xl font-semibold text-gray-900 mb-4">
                <i class="fas fa-tools mr-2 text-sky-500"></i>
                Available Actions
            </h3>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <% if (user.role === 'admin' || user.role === 'operador') { %>
                <a href="/form" class="flex items-center justify-center px-6 py-3 bg-gradient-to-r from-sky-300 to-sky-400 text-sky-800 text-sm font-medium rounded-lg hover:from-sky-400 hover:to-sky-500 transition-all duration-200 shadow-md hover:shadow-lg">
                    <i class="fas fa-plus mr-2"></i>
                    Add Supplier
                </a>
                <% } %>
                <% if (user.role === 'admin' || user.role === 'manager') { %>
                <a href="/bulk-upload" class="flex items-center justify-center px-6 py-3 bg-gradient-to-r from-purple-300 to-purple-400 text-purple-800 text-sm font-medium rounded-lg hover:from-purple-400 hover:to-purple-500 transition-all duration-200 shadow-md hover:shadow-lg">
                    <i class="fas fa-file-excel mr-2"></i>
                    Bulk Upload
                </a>
                <% } %>
                <a href="/search" class="flex items-center justify-center px-6 py-3 bg-gradient-to-r from-emerald-300 to-emerald-400 text-emerald-800 text-sm font-medium rounded-lg hover:from-emerald-400 hover:to-emerald-500 transition-all duration-200 shadow-md hover:shadow-lg">
                    <i class="fas fa-search mr-2"></i>
                    Search Suppliers
                </a>
                <% if (user.role === 'admin') { %>
                <a href="/logs" class="flex items-center justify-center px-6 py-3 bg-gradient-to-r from-red-300 to-red-400 text-red-800 text-sm font-medium rounded-lg hover:from-red-400 hover:to-red-500 transition-all duration-200 shadow-md hover:shadow-lg">
                    <i class="fas fa-clipboard-list mr-2"></i>
                    System Logs
                </a>
                <% } %>
                <button onclick="location.reload()" class="flex items-center justify-center px-6 py-3 bg-gradient-to-r from-slate-300 to-slate-400 text-slate-800 text-sm font-medium rounded-lg hover:from-slate-400 hover:to-slate-500 transition-all duration-200 shadow-md hover:shadow-lg">
                    <i class="fas fa-sync-alt mr-2"></i>
                    Refresh Data
                </button>
            </div>
        </div>

        <!-- Statistics Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            <!-- Categories Stats -->
            <div class="bg-white rounded-xl shadow-lg p-6">
                <h3 class="text-xl font-semibold text-gray-900 mb-4">
                    <i class="fas fa-chart-pie mr-2 text-sky-500"></i>
                    Distribution by Category
                </h3>
                <div class="flex justify-center">
                    <canvas id="categoriesChart" width="210" height="210" class="max-w-xs"></canvas>
                </div>
            </div>

            <!-- Responsible Stats -->
            <div class="bg-white rounded-xl shadow-lg p-6">
                <h3 class="text-xl font-semibold text-gray-900 mb-4">
                    <i class="fas fa-user-tie mr-2 text-emerald-500"></i>
                    Suppliers by Manager
                </h3>
                <div class="space-y-3">
                    <% Object.entries(stats.responsibleStats).sort((a, b) => b[1] - a[1]).slice(0, 8).forEach(function([responsible, count]) { %>
                    <div class="flex items-center justify-between">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-emerald-100 text-emerald-700">
                            <%= responsible %>
                        </span>
                        <div class="flex items-center space-x-3 flex-1 ml-4">
                            <div class="flex-1 bg-gray-200 rounded-full h-2">
                                <div class="bg-gradient-to-r from-emerald-300 to-emerald-400 h-2 rounded-full transition-all duration-300" style="width: <%= (count / Math.max(...Object.values(stats.responsibleStats)) * 100).toFixed(1) %>%"></div>
                            </div>
                            <span class="text-sm font-medium text-gray-600 min-w-0"><%= count %></span>
                        </div>
                    </div>
                    <% }); %>
                </div>
            </div>
        </div>

        <!-- Monthly Stats -->
        <div class="bg-white rounded-xl shadow-lg p-6 mb-8">
            <h3 class="text-xl font-semibold text-gray-900 mb-4">
                <i class="fas fa-calendar-alt mr-2 text-violet-500"></i>
                Records by Month
            </h3>
            <!-- Filtros de período e ordenação -->
            <form method="GET" action="/dashboard" class="mb-4">
                <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                    <div class="flex items-center justify-between">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Sort by</label>
                        <select name="monthlySort" class="w-full px-3 py-2 border-2 border-gray-200 rounded-lg">
                            <option value="period_asc" <%= _monthlySort === 'period_asc' ? 'selected' : '' %>>Period (Ascending)</option>
                            <option value="period_desc" <%= _monthlySort === 'period_desc' ? 'selected' : '' %>>Period (Descending)</option>
                            <option value="count_asc" <%= _monthlySort === 'count_asc' ? 'selected' : '' %>>Records (Ascending)</option>
                            <option value="count_desc" <%= _monthlySort === 'count_desc' ? 'selected' : '' %>>Records (Descending)</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Start month (YYYY-MM)</label>
                        <input type="month" name="monthlyStart" value="<%= _monthlyStart %>" class="w-full px-3 py-2 border-2 border-gray-200 rounded-lg" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">End month (YYYY-MM)</label>
                        <input type="month" name="monthlyEnd" value="<%= _monthlyEnd %>" class="w-full px-3 py-2 border-2 border-gray-200 rounded-lg" />
                    </div>
                    <div class="flex items-end">
                        <button type="submit" class="w-full bg-violet-300 hover:bg-violet-400 text-violet-800 px-4 py-2 rounded-lg font-medium transition-all">Apply</button>
                    </div>
                </div>
            </form>
            <div class="space-y-3">
                <% _sortedMonthlyEntries.slice(0, 10).forEach(function([monthKey, count]) { %>
                <div class="flex items-center justify-between">
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800">
                        <%= monthKey %>
                    </span>
                    <div class="flex items-center space-x-3 flex-1 ml-4">
                        <div class="flex-1 bg-gray-200 rounded-full h-2">
                            <div class="bg-gradient-to-r from-violet-300 to-violet-400 h-2 rounded-full transition-all duration-300" style="width: <%= (count / Math.max(...Object.values(stats.monthlyStats)) * 100).toFixed(1) %>%"></div>
                        </div>
                        <span class="text-sm font-medium text-gray-600 min-w-0"><%= count %> records</span>
                    </div>
                </div>
                <% }); %>
                <% if (_sortedMonthlyEntries.length > 10) { %>
                <p class="text-sm text-gray-500 mt-3">Showing 10 months based on filters...</p>
                <% } %>
            </div>
        </div>

        <!-- Recent Records Table -->
        <div class="bg-white rounded-xl shadow-lg p-6">
            <h3 class="text-xl font-semibold text-gray-900 mb-4">
                <i class="fas fa-table mr-2 text-sky-500"></i>
                Recent Records
            </h3>
            <!-- Filtro por data -->
            <form method="GET" action="/dashboard" class="mb-4">
                <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                    <div class="flex items-center justify-between">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Start date</label>
                        <input type="date" name="recentStart" value="<%= _recentStart %>" class="w-full px-3 py-2 border-2 border-gray-200 rounded-lg" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">End date</label>
                        <input type="date" name="recentEnd" value="<%= _recentEnd %>" class="w-full px-3 py-2 border-2 border-gray-200 rounded-lg" />
                    </div>
                    <div class="md:col-span-2 flex items-end">
                        <button type="submit" class="bg-sky-300 hover:bg-sky-400 text-sky-800 px-4 py-2 rounded-lg font-medium transition-all">Apply</button>
                    </div>
                </div>
            </form>
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Website</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Manager</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Account Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Registration Date</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <% data.forEach(function(record, index) { %>
                        <tr class="hover:bg-gray-50 transition-colors duration-200">
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                <%= record.Name || 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600 font-mono">
                                <% if (record.Website) { %>
                                <a href="<%= record.Website.startsWith('http') ? record.Website : 'https://' + record.Website %>" target="_blank" class="text-indigo-600 hover:text-indigo-800 transition-colors duration-200">
                                    <%= record.Website %>
                                </a>
                                <% } else { %>
                                N/A
                                <% } %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                    <%= record['CATEGORÍA'] || 'N/A' %>
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                                <%= record['Responsable'] || 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                    <%= record['Account Request Status'] || 'N/A' %>
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600 font-mono">
                                <% if (record._parsedDate) { %>
                                    <%= record._parsedDate.toISOString().slice(0, 10) %>
                                <% } else { %>
                                    N/A
                                <% } %>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
            <div class="mt-4 text-center">
                <a href="/search" class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-sky-300 to-sky-400 text-sky-800 text-sm font-medium rounded-lg hover:from-sky-400 hover:to-sky-500 transition-all duration-200">
                    <i class="fas fa-eye mr-2"></i>
                    View All Records
                </a>
            </div>
        </div>
    </div>
    <script>
        // Gráfico de Pizza para Categorias
        const categoriesData = {
            labels: [<% Object.entries(stats.categoryStats).sort((a, b) => b[1] - a[1]).slice(0, 8).forEach(function([category, count], index) { %>'<%= category.replace(/'/g, "\\'") %>'<%= index < Math.min(Object.keys(stats.categoryStats).length, 8) - 1 ? ',' : '' %><% }); %>],
            datasets: [{
                data: [<% Object.entries(stats.categoryStats).sort((a, b) => b[1] - a[1]).slice(0, 8).forEach(function([category, count], index) { %><%= count %><%= index < Math.min(Object.keys(stats.categoryStats).length, 8) - 1 ? ',' : '' %><% }); %>],
                backgroundColor: [
                     '#FFB6C1', '#98FB98', '#DDA0DD', '#F0E68C', 
                     '#FFA07A', '#87CEEB', '#D8BFD8', '#F5DEB3'
                 ],
                borderWidth: 2,
                borderColor: '#ffffff'
            }]
        };

        const categoriesConfig = {
            type: 'pie',
            data: categoriesData,
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'bottom',
                        labels: {
                            padding: 15,
                            usePointStyle: true,
                            pointStyle: 'circle',
                            font: {
                                family: 'Geist Sans',
                                size: 12
                            },
                            generateLabels: function(chart) {
                                const data = chart.data;
                                if (data.labels.length && data.datasets.length) {
                                    return data.labels.map((label, i) => {
                                        const value = data.datasets[0].data[i];
                                        const total = data.datasets[0].data.reduce((a, b) => a + b, 0);
                                        const percentage = ((value / total) * 100).toFixed(1);
                                        return {
                                            text: `${label} (${value} - ${percentage}%)`,
                                            fillStyle: data.datasets[0].backgroundColor[i],
                                            strokeStyle: data.datasets[0].backgroundColor[i],
                                            lineWidth: 0,
                                            pointStyle: 'circle'
                                        };
                                    });
                                }
                                return [];
                            }
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.parsed;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((value / total) * 100).toFixed(1);
                                return `${label}: ${value} (${percentage}%)`;
                            }
                        }
                    }
                },
                animation: {
                    animateRotate: true,
                    duration: 1000
                }
            }
        };

        // Inicializar o gráfico de forma robusta (DOM já pode estar pronto)
        (function initCategoriesChart() {
            const createChart = () => {
                const canvas = document.getElementById('categoriesChart');
                if (!canvas) {
                    console.warn('categoriesChart canvas não encontrado');
                    return;
                }
                if (typeof Chart === 'undefined') {
                    console.error('Chart.js não carregado');
                    return;
                }
                const ctx = canvas.getContext('2d');
                new Chart(ctx, categoriesConfig);
            };
        
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', createChart);
            } else {
                // DOM já está pronto
                createChart();
            }
        })();
    </script>
</body>
</html>